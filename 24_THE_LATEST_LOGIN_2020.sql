/*
https://leetcode.com/problems/the-latest-login-in-2020 

Table: Logins
+----------------+----------+
| Column Name    | Type     |
+----------------+----------+
| user_id        | int      |
| time_stamp     | datetime |
+----------------+----------+
(user_id, time_stamp)는 이 테이블의 기본 키입니다.
각 행에는 ID가 user_id인 사용자의 로그인 시간에 대한 정보가 포함되어 있습니다.


2020년 모든 사용자의 최신 로그인을 보고하는 SQL 쿼리를 작성합니다.
2020년에 로그인하지 않은 사용자는 포함하지 않습니다.
어떤 순서로든 결과 테이블을 반환합니다.


Example:
Input: 
Logins table:
+---------+---------------------+
| user_id | time_stamp          |
+---------+---------------------+
| 6       | 2020-06-30 15:06:07 |
| 6       | 2021-04-21 14:06:06 |
| 6       | 2019-03-07 00:18:15 |
| 8       | 2020-02-01 05:10:53 |
| 8       | 2020-12-30 00:46:50 |
| 2       | 2020-01-16 02:49:50 |
| 2       | 2019-08-25 07:59:08 |
| 14      | 2019-07-14 09:00:00 |
| 14      | 2021-01-06 11:59:59 |
+---------+---------------------+
Output: 
+---------+---------------------+
| user_id | last_stamp          |
+---------+---------------------+
| 6       | 2020-06-30 15:06:07 |
| 8       | 2020-12-30 00:46:50 |
| 2       | 2020-01-16 02:49:50 |
+---------+---------------------+
설명:
사용자 6은 자신의 계정에 3번 로그인했지만 2020년에는 한 번만 로그인했기 때문에 이 로그인을 결과 테이블에 포함합니다.
사용자 8은 2020년에 2번, 2월에 한 번, 12월에 한 번 자신의 계정에 로그인했습니다. 결과 테이블에는 최신 항목(12월)만 포함됩니다.
사용자 2는 자신의 계정에 2번 로그인했지만 2020년에는 한 번만 로그인했기 때문에 이 로그인을 결과 테이블에 포함합니다.
사용자 14는 2020년에는 로그인하지 않았으므로 결과표에 포함하지 않습니다.
*/

# [SETTING]
USE PRACTICE;
DROP TABLE Logins;
CREATE TABLE Logins (user_id int, time_stamp datetime);
INSERT INTO
	Logins (user_id, time_stamp)
VALUES
('6', '2020-06-30 15:06:07')
,('6', '2021-04-21 14:06:06')
,('6', '2019-03-07 00:18:15')
,('8', '2020-02-01 05:10:53')
,('8', '2020-12-30 00:46:50')
,('2', '2020-01-16 02:49:50')
,('2', '2019-08-25 07:59:08')
,('14', '2019-07-14 09:00:00')
,('14', '2021-01-06 11:59:59');
SELECT * FROM Logins;

SELECT USER_ID, MAX(TIME_STAMP) AS LAST_STAMP
FROM LOGINS
WHERE EXTRACT(YEAR FROM TIME_STAMP) = '2020'
GROUP BY USER_ID